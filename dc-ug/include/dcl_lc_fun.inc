;====================================================
;; ОПРЕДЕЛЕНИЕ  ПРОВЕРЯЕМЫХ СОСТОЯНИЙ ПОЗИЦИОННЫХ ОБЪЕКТОВ
DP_s1			= 1;;    1 состояние
DP_Uns1			= 2;; не 1 состояние
DP_s2			= 3;;    2 состояние
DP_Uns2			= 4;; не 2 состояние
DP_s3			= 5;;    3 состояние
DP_Uns3			= 6;; не 3 состояние
DP_s4			= 7;;    4 состояние
DP_Uns4			= 8;; не 4 состояние
;; ОПРЕДЕЛЕНИЕ  ПРОВЕРЯЕМЫХ СОСТОЯНИЙ ПЕРЕГОНОВ
PG_Priem		= 21;;прием
PG_Otpr			= 22;;отправление
PG_Alarm		= 23;;авария
PG_UnAlarm		= 24;;нет аварии
PG_Free			= 25;;свободен
PG_Busy			= 26;;занят
;; ОПРЕДЕЛЕНИЕ  ПРОВЕРЯЕМЫХ СОСТОЯНИЙ СТРЕЛОЧНЫХ СЕКЦИЙ
SP_Busy			= 41;занята
SP_Free			= 42;свободна
SP_ZM			= 43;замкнута
SP_UnZM			= 44;не замкнута
SP_Ir			= 45;искусственная разделка секции
SP_UnIr			= 46;нет искусственной разделки секции
SP_ZMLog		= 47;логически замкнута
SP_UnZMLog		= 48;логически не замкнута
;; ОПРЕДЕЛЕНИЕ ПРОВЕРЯЕМЫХ СОСТОЯНИЙ СТРЕЛОК
St_PK			= 61;стрелка в +
St_UnPK			= 62;стрелка не в +
St_MK			= 63;стрелка в -
St_UnMK			= 64;стрелка не в -
St_PKMK			= 65;есть любой из контролей контроля
St_UnPKMK		= 66;нет контроля
St_Reset		= 67;сброс стрелки
St_UnReset		= 68;
St_MU			= 69;местное управление
St_UnMu			= 70;
St_Os			= 71;откл. стрелки
St_UnOs			= 72;
St_VSA			= 73;вспомогательный перевод стрелки
St_UnVSA		= 74;
St_ZM			= 75;секция с данной стрелкой замкнута
St_UnZM			= 76;секция с данной стрелкой не замкнута
St_PrgBlk		= 77;стрелка программно заблокирована
St_UnPrgBlk		= 78;стрелка программно не заблокирована
St_Busy			= 79;секция с данной стрелкой занята
St_Free			= 80;секция с данной стрелкой свободна
St_Ir			= 81;секция с данной стрелкой имеет искусственную разделку
St_UnIr			= 82;секция с данной стрелкой не имеен искусственной разделки
;St_OhrMar		= 83;охранное положение в маршруте
;St_UnOhrMar	= 84;неохранное положение в маршруте
;St_Av			= 85;выдержка времени АВ
;St_UnAv		= 86;нет выдержки времени АВ
;St_VVAv		= 87;выдержка времени АВ
;St_UnVVAv		= 88;нет выдержки времени АВ
;; ОПРЕДЕЛЕНИЕ  ПРОВЕРЯЕМЫХ СОСТОЯНИЙ ПУТЕЙ
KP_Busy			= 91;
KP_Free			= 92;
KP_ZM			= 93;
KP_UnZM			= 94;
KP_ZM_T			= 95;
KP_UnZM_T		= 96;
KP_ZM_N			= 97;
KP_UnZM_N		= 98;
KP_Remont		= 99;
KP_UnRemont		= 100;
KP_ZMLog		= 101;
KP_UnZMLog		= 102;
KP_Obkat		= 103;имеется необходимость обкатать путь
KP_UnObkat		= 104;нет необходимости обкатать путь
;; ОПРЕДЕЛЕНИЕ ПРОВЕРЯЕМЫХ СОСТОЯНИЙ СВЕТОФОРОВ
KS_Otk			= 111; открыт светофор
KS_Zak			= 112; закрыт светофор
KS_Pz			= 113; открыт поездным
KS_UnPz			= 114; закрыт поездной
KS_Mnv			= 115; открыт маневровый
KS_UnMnv		= 116; закрыт маневровый
KS_Prig			= 117; открыт приглас
KS_UnPrig		= 118; закрыт приглас
KS_AutoD		= 119; св. на АД
KS_UnAutoD		= 120; нет АД
KS_Ored			= 121; перегорания нити красного огня
KS_UnOred		= 122;нет перегорания нити красного огня
KS_Og			= 123;перегорания нити зеленого огня
KS_UnOg			= 124;нет перегорания нити зеленого огня
KS_Op			= 125;перегорания нити приглас. огня
KS_UnOp			= 126;нет перегорания нити приглас. огня
KS_Blk			= 127;блокировка светофора
KS_UnBlk		= 128;нет блокировки светофора
KS_Fade			= 129;погашен
KS_UnFade		= 130;не погашен
KS_Flr			= 131;отказ
KS_UnFlr		= 132;нет отказа
;; ОПРЕДЕЛЕНИЕ ПРОВЕРЯЕМЫХ СОСТОЯНИЙ ПЕРЕЕЗДОВ
Pr_Open			= 151
Pr_Close		= 152
Pr_Alrm			= 153;авария переезда
Pr_UnAlrm		= 154
Pr_Izv			= 155;передача извещения на переезд
Pr_UnIzv		= 156
Pr_Ogr			= 157
Pr_UnOgr		= 158
;; ОПРЕДЕЛЕНИЕ  ПРОВЕРЯЕМЫХ СОСТОЯНИЙ УУ/УП
UP_Busy			= 171;занята
UP_Free			= 172;свободна
;; ОПРЕДЕЛЕНИЕ ПРОВЕРЯЕМЫХ СОСТОЯНИЙ ПЕРЕГОННЫХ БОКСОВ
Pgb_Blk			= 191;блокировка светофора
Pgb_UnBlk		= 192;нет блокировки светофора
;; ОПРЕДЕЛЕНИЕ ПРОВЕРЯЕМЫХ СОСТОЯНИЙ ТАЙМЕРЫ
TM_TimeOut		= 201;отсрочка выполения условия
TM_During		= 202;в течении времени
;; ОПРЕДЕЛЕНИЕ ПРОВЕРЯЕМЫХ СОСТОЯНИЙ СТАНЦИИ
STN_UnKnownMode	= 210;;неизвестный режим управления
STN_KnownMode	= 211;;известный режим управления
STN_DU			= 212;;режим ДУ
STN_UnDU		= 213;;не режим ДУ
STN_RU			= 214;;режим РУ
STN_UnRU		= 215;;не режим РУ
STN_SUAUSDU		= 216;;режим СУ
STN_UnSUAUSDU	= 217;;не режим СУ
STN_AUM			= 218;;режим АУМ
STN_UnAUM		= 219;;не режим АУМ
STN_Trans		= 220;;режим перехода
STN_UnTrans		= 221;;не режим перехода
STN_PrUnKnownMode= 222;;предыдущий режим неизвестный режим управления
STN_PrKnownMode	= 223;;предыдущий режим известный режим управления
STN_PrDU		= 224;;предыдущий режим режим ДУ
STN_PrUnDU		= 225;;предыдущий режим не режим ДУ
STN_PrRU		= 226;;предыдущий режим режим РУ
STN_PrUnRU		= 227;;предыдущий режим не режим РУ
STN_PrSUAUSDU	= 228;;предыдущий режим режим СУ
STN_PrUnSUAUSDU	= 229;;предыдущий режим не режим СУ
STN_PrAUM		= 230;;предыдущий режим режим АУМ
STN_PrUnAUM		= 231;;предыдущий режим не режим АУМ
STN_PrTrans		= 232;;предыдущий режим режим перехода
STN_PrUnTrans	= 233;;предыдущий режим не режим перехода
;;;;;;;;
;;ОБЩИЕ СОСТОЯНИЯ 

obj_GngTmLRTm	= 65530; с последнего изменения состояния объекта прошло больше времени чем указано в таймере
obj_GngTmSMTm	= 65531; с последнего изменения состояния объекта прошло меньше времени чем указано в таймере
obj_no_Ts		= 65532; проверка на отсутствие ТС
obj_ok_Ts		= 65533; проверка на наличие ТС
obj_UnExist		= 65534; проверка на наличие параметра функции
obj_Exist		= 65535; проверка на наличие параметра функции

;===============================================
START_FUN  MACRO NameFun,Params

	Fun1&NameFun:;;метка функции
	
	;;назначим имена переменным
	NumParamFun = 0;
	FOR Par,<Params>
		NumParamFun = NumParamFun + 1
		ParFun&Par = NumParamFun	;создаем параметр - номер
	ENDM

	
	DD NameFun		;;указатель первой подпроцедуры
	DB NumParamFun	;;кол-во входных данных
ENDM
;;---------------------------
ConstructItems MACRO Items
Local Lab1,Lab2;,NSymM
Lab1:
	DB 0;;кол-во условий
	
	NumItem = 0
	FOR Item,<Items>
		??NSymM1 = 0
		??NSymM2 = 0
		NSym = 1

		;NSymM = @INSTR(1,Item,'-');;номер символа = "-"
		FORC S,<Item>
			IFIDN <'&S'>,<'-'>
				IF (??NSymM1 EQ 0h)
					??NSymM1 = NSym
				else
					??NSymM2 = NSym
				ENDIF
			ENDIF
			NSym = NSym + 1
		ENDM
		
		IF ((??NSymM1 NE 0h) AND (??NSymM2 EQ 0h));;это должен быть параметр функции
			DB 'V'																		;;'V'-входной параметр
			PutParSost @SubStr(&Item, 1, ??NSymM1-1)									;имя объекта
			PutParSost ,@SubStr("&Item", ??NSymM1+2, @SizeStr("&Item")-(??NSymM1+2))	;проверка
			DB 0h;выровним до 4 байт
		ELSE
			IF((??NSymM1 NE 0h) AND (??NSymM2 NE 0h));;это должен быть параметр функции
				DB 'T'																		;;'T'-два входых параметра
				PutParSost @SubStr(&Item, 1, ??NSymM1-1)									;имя объекта1
				PutParSost @SubStr(&Item, ??NSymM1+1, ??NSymM2-??NSymM1-1)							;имя объекта2
				PutParSost ,@SubStr("&Item", ??NSymM2+2, @SizeStr("&Item")-(??NSymM2+2))	;проверка
			ELSE;;это метка
				DB 'P'			;;'P'-подпроцедура
				DD Item			;;вложенная процедура
			ENDIF
		ENDIF
		NumItem = NumItem + 1
	ENDM
Lab2:	
	Org Lab1
	DB NumItem;;кол-во условий
	Org Lab2
	
ENDM

PutParSost MACRO par,sost
	IFNB <par>
		DB ParFun&par;;номер входного параметра(объекта контроля)
	ENDIF
	
	IFNB <sost>
		DW sost;;состояние которое нужно проверить у входного параметра(объекта контроля)
	ENDIF
ENDM
;;---------------------------
Proc_And MACRO Items
	DB 'A'
	ConstructItems <Items>
ENDM
;;---------------------------
Proc_Or MACRO Items
	DB 'O'
	ConstructItems <Items>
ENDM
;;---------------------------
Proc_No MACRO Items
	DB 'N'
	ConstructItems <Items>
ENDM
;;---------------------------
Proc_NoAnd MACRO Items
	DB 'N'
	ConstructItems <Items>
ENDM
;;---------------------------
Proc_NoOr MACRO Items
	DB 'R'
	ConstructItems <Items>
ENDM
;;---------------------------
Proc_Fun MACRO Fun,Params
	Local Lab1,Lab2
	
	DB 'F'
	DD Fun1&Fun
Lab1:	
	DB 0;кол-во входных данных
	
	KolParam = 0
	FOR Param,<Params>
		DB ParFun&Param
		KolParam = KolParam + 1
	ENDM
	
Lab2:	
	Org Lab1
	DB KolParam;;кол-во условий
	Org Lab2
	
ENDM
;;---------------------------
END_FUN MACRO
ENDM