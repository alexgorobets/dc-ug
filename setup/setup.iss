; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "ÄÖ-Þã (DcUg)"
#define MyAppVersion "1.0"
#define MyAppPublisher "ÎÎÎ ÍÏÖ ÀÒÑ"
#define MyAppExeName "dcug.bat"

#include "environment.iss"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{7EA6B449-DBD8-4D85-9002-B8B0575A39DD}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
DefaultDirName={pf}\DcUg
DisableProgramGroupPage=yes
OutputDir="ÄÖ-Þã"
OutputBaseFilename=dcug-setup
Compression=lzma
SolidCompression=yes
ChangesEnvironment=true

; More options in setup section as well as other sections like Files, Components, Tasks...

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "russian"; MessagesFile: "compiler:Languages\Russian.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "src\{#MyAppExeName}"; DestDir: "{app}\bin"; Flags: ignoreversion 
Source: "src\install.bat"; DestDir: "{app}"; Flags: ignoreversion 
Source: "src\uninstall.bat"; DestDir: "{app}"; Flags: ignoreversion 
Source: "..\dc-ug\*"; DestDir: "{app}\bin"; Flags: ignoreversion recursesubdirs createallsubdirs 

[Icons]
Name: "{commonprograms}\{#MyAppName}"; Filename: "{app}\bin\{#MyAppExeName}"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\bin\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\install.bat";
Filename: "{app}\bin\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[UninstallRun]
Filename: "{app}\uninstall.bat";

[Code]
procedure CurStepChanged(CurStep: TSetupStep);
begin
    if CurStep = ssPostInstall 
    then EnvAddPath(ExpandConstant('{app}') +'\bin');
end;

procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
begin
    if CurUninstallStep = usPostUninstall
    then EnvRemovePath(ExpandConstant('{app}') +'\bin');
end;